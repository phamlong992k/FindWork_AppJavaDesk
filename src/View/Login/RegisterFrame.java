/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Login;


import DTO.Email;
import Entity.User;
import Model.EmailDAO;
import Model.UserDAO;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author Asus
 */
public class RegisterFrame extends javax.swing.JFrame {

    /**
     * Creates new form RegisterFrame
     */
    User dto;
    CheckCodeFrame checkCodeFrame;
    UserDAO dao = new UserDAO();
    String phone="";
    String password="";
    public RegisterFrame() {
        initComponents();
        rdbSexFemale.setSelected(true);
        setImage();
        checkCodeFrame=new CheckCodeFrame(this);
        setLocationRelativeTo(null);
    }
    private void setImage()
    {
        try 
        {
            BufferedImage imageMain;            
            imageMain = ImageIO.read(getClass().getResource("/icon/Register.png"));
            ImageIcon iconMain = new ImageIcon(imageMain.getScaledInstance(820 , 830, imageMain.SCALE_SMOOTH));
            RegisterLabel.setIcon(iconMain);
        } catch (IOException ex) {
            Logger.getLogger(LoginDetailFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtRegisEmail = new javax.swing.JTextField();
        txtRegisName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rdoSexMale = new javax.swing.JRadioButton();
        rdbSexFemale = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        txtBirthDate = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbxProvince = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRegisPhone = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        RegisterLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 153, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Đăng kí tài khoản");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 90));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Thông Tin Liên Hệ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, -1, -1));

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtRegisEmail.setText("ABC@.gmail.com");

        txtRegisName.setText("long");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Họ và tên");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Năm sinh");

        buttonGroup1.add(rdoSexMale);
        rdoSexMale.setText("Nam");

        buttonGroup1.add(rdbSexFemale);
        rdbSexFemale.setText("Nữ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Giới tính");

        txtAddress.setText("quan 1");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Địa chỉ");

        cbxProvince.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "An Giang", "Bà Rịa–Vũng Tàu", "Bắc Giang", "Bắc Kạn", "Bạc Liêu", "Bắc Nin", "Bến Tre", "Bình Ðịnh", "Bình Dương", "Bình Phướcc", "Bình Thuận", "Cà Mau", "Cần Thơ", "Cao Bằng", "Ðà Nẵng", "Ðắk Lắk", "Ðắk Nông", "Ðiện Biên", "Ðồng Nai", "Ðồng Tháp", "Gia Lai", "Hà Giang", "Hà Nam", "Hà Nội", "Hà Tĩnh ", "Hải Duong", "Hải Phòng", "Hậu Giang", "TP.Hồ Chí Minh", "Hòa Bình ", "Hưng Yên", "Khánh Hòa", "Kiên Giang", "Kon Tum", "Lai Châu", "Lâm Ðồng", "Lạng Son", "Lào Cai", "Long An", "Nam Ðịnh", "Nghệ An", "Ninh Bình", "Ninh Thuận", "Phú Thọ", "Phú Yên", "Quảng Bình", "Quảng Nam", "Quảng Ngãi", "Quảng Ninh", "Quảng Trị", "Sóc Trăng", "Sơn La ", "Tây Ninh", "Thái Bình", "Thái Nguyên", "Thanh Hóa", "Thừa Thiên–Huế ", "Tiền Giang", "Trà Vinh", "Tuyên Quang", "Vinh Long", "Vinh Phúc", "Yên Bái" }));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Tỉnh");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Email");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(rdoSexMale)
                        .addGap(51, 51, 51)
                        .addComponent(rdbSexFemale)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtRegisEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                            .addComponent(txtRegisName)
                            .addComponent(txtBirthDate)
                            .addComponent(cbxProvince, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddress))
                        .addGap(56, 56, 56))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtRegisName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(rdoSexMale)
                    .addComponent(rdbSexFemale))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbxProvince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtRegisEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 419, 460, 320));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Số điện thoại");

        txtRegisPhone.setText("0123456788");

        jLabel2.setText("Mật khẩu");

        jLabel3.setText("Nhập lại mật khẩu");

        jPasswordField1.setText("jPasswordField1");

        jPasswordField2.setText("jPasswordField2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRegisPhone)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(jPasswordField2))
                        .addGap(39, 39, 39))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegisPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 32, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 460, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Tài Khoản");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        btnRegister.setText("Đăng Ký");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 760, 264, 49));

        RegisterLabel.setMaximumSize(new java.awt.Dimension(9999, 9999));
        jPanel1.add(RegisterLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 830));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addUer(User dto) throws ParseException
    {
        UserDAO dao = new UserDAO();
        try {
            dao.addUser(dto);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Tạo tài khoản thất bại");
            Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Tạo tài khoản thất bại");        
            Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void addAccount(String phone, String password, int idUser)
    {
        UserDAO dao = new UserDAO();
        try {
            dao.addAccount(phone, password, idUser);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Tạo tài khoản thát bại");
            Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Tạo tài khoản thát bại");            
            Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private String checkDateTime(String input)
    {
        String result = "";
            Calendar  calendar = Calendar.getInstance();
            
            try {
                if(!input.matches("[0-9]{1,2}/[0-9]{1,2}/[0-9]{1,4}")) throw new Exception("Wrong format (dd/MM/yyyy)");
                Scanner s = new Scanner(input);
                int year = 0;
                int month = 0;
                int day = 0;
                int i = 0;
                s.useDelimiter("/");
                while(s.hasNext())
                {
                    i++;
                    if(i == 1)
                        day = Integer.parseInt(s.next());
                    if(i == 2)
                        month = Integer.parseInt(s.next());
                    if(i == 3)
                        year = Integer.parseInt(s.next());
                }
                int currentyear = calendar.get(Calendar.YEAR);
                if( year == 0 || year > currentyear) throw new Exception("Year > 0 and <= "+currentyear);
                calendar.set(Calendar.YEAR, year);
                if(month == 0 || month > 12 ) throw new Exception("Month have to in ( 1-12 )");
                calendar.set(Calendar.MONTH, month-1);
                int maxday = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);
                if(day == 0 || day > maxday) throw new Exception("Dday of month "+month+" <= "+maxday);
                calendar.set(Calendar.DAY_OF_MONTH, day);
                SimpleDateFormat format= new SimpleDateFormat("dd/MM/yyyy");
                Date date = calendar.getTime();
            } catch (Exception e) {
                result += e.getMessage();
            }
            return result;
    }
    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        String valid = "";
        phone = txtRegisPhone.getText().trim();
        boolean match = phone.matches("[0-9]{10}");
        if(!match)
            valid += "Số điện thoại không hợp lệ\n";
        password = new String(jPasswordField1.getPassword());
        String password2 = new String(jPasswordField2.getPassword());
        if(password.equals("") || password2.equals("") || !password.equals(password2))
            valid += "Mật khẩu không được trống và phải trùng nhau\n";
        String name = txtRegisName.getText().trim();
        if(name.equals(""))
            valid += "Họ và tên không được trống\n";
        String sex;
        if(rdbSexFemale.isSelected())
            sex = "0";
        else
            sex = "1";
        String birth = txtBirthDate.getText();
        valid += checkDateTime(birth);
        int pos = cbxProvince.getSelectedIndex();
        String province = cbxProvince.getItemAt(pos).trim();
        String add = txtAddress.getText();
        if(add.equals(""))
            valid += "Địa chỉ không được trống";
        String email = txtRegisEmail.getText().trim();
        if(email.equals(""))
            valid += "Email không được trống";
        else
            if (!email.matches("[^@]+@[^.@]+[.][^.@]+([.][^@.]+)?"))
                valid += "It's not email format";
        if(!valid.equals(""))
            JOptionPane.showMessageDialog(this, valid);
        else
        {
            
            try {
                
                boolean check = dao.checkPhone(phone);
                if(check == true)
                    JOptionPane.showMessageDialog(this, "Số điện thoại này đã được đăng kí tài khoản");
                else
                {
                    ///////
                    dto = new User(name, sex, birth, province, add, email);
                    JOptionPane.showMessageDialog(null,"Xin hãy chờ để nhận code xác nhận mail");
                    EmailDAO emailDAO= new EmailDAO(new Email());
                    int code=emailDAO.EmailSend((String)txtRegisEmail.getText());
                    checkCodeFrame.setVisible(true);
                    checkCodeFrame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
                    checkCodeFrame.setCode(code);
                    
                }    
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Tạo tài khoản thất bại");                
                Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Tạo tài khoản thất bại");            
                Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                
                JOptionPane.showMessageDialog(this, "Convert util Date to sql Date failed");
                Logger.getLogger(RegisterFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnRegisterActionPerformed
    public void registerOK(){
            if(dto!=null){
                try {
                    addUer(dto);
                    int idUser;
                    idUser = dao.getIdAddedUser();     
                    String hashed = BCrypt.hashpw(password, BCrypt.gensalt(12));
                    addAccount(phone, hashed, idUser);
                    JOptionPane.showMessageDialog(this, "Tạo tài khoản thành công");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,"Tao Tai Khoan That Bai");
                }
                
            }
            
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel RegisterLabel;
    private javax.swing.JButton btnRegister;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxProvince;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JRadioButton rdbSexFemale;
    private javax.swing.JRadioButton rdoSexMale;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtBirthDate;
    private javax.swing.JTextField txtRegisEmail;
    private javax.swing.JTextField txtRegisName;
    private javax.swing.JTextField txtRegisPhone;
    // End of variables declaration//GEN-END:variables
}
